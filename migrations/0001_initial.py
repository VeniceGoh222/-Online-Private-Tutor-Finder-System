# Generated by Django 5.1.5 on 2025-01-29 13:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(max_length=10, unique=True)),
                ('user_phone_num', models.CharField(max_length=15)),
                ('user_role', models.CharField(choices=[('PARENT', 'Parent'), ('TUTOR', 'Tutor')], max_length=20)),
                ('profile_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending')], default='PENDING', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_name', models.CharField(max_length=150)),
                ('admin_email', models.EmailField(max_length=254, unique=True)),
                ('admin_password', models.CharField(max_length=128)),
                ('admin_phone', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'Administrator',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_name', models.CharField(max_length=150)),
                ('staff_email', models.EmailField(max_length=254, unique=True)),
                ('staff_password', models.CharField(max_length=128)),
                ('staff_phone', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('parent_name', models.CharField(max_length=100)),
                ('child_name', models.CharField(max_length=100)),
                ('child_age', models.IntegerField()),
                ('child_level', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Parent',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('qualification', models.CharField(max_length=255)),
                ('subject_name', models.CharField(max_length=100)),
                ('session_time', models.DateTimeField()),
                ('session_price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=100)),
                ('session_time', models.DateTimeField()),
                ('booking_status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled')], max_length=20)),
                ('schedule', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='additem.schedule')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.parent')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='SupportAssistance',
            fields=[
                ('query_id', models.AutoField(primary_key=True, serialize=False)),
                ('query_details', models.TextField()),
                ('response', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved')], max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='schedule',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='additem.parent'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.tutor'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], max_length=20)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='additem.booking')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.parent')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=100)),
                ('session_time', models.DateTimeField()),
                ('flagged', models.BooleanField(default=False)),
                ('comments', models.TextField()),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.parent')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('chat_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.parent')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='additem.tutor')),
            ],
        ),
    ]
